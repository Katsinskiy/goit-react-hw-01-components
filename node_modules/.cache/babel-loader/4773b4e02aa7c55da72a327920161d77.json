{"ast":null,"code":"var _jsxFileName = \"/Users/Katsinskiy/Documents/GitHub/goit-react-hw-01-components/src/components/Statistics/Statistics.js\";\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Statistics(_ref) {\n  let {\n    title = ' ',\n    stats\n  } = _ref;\n  console.log(stats);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: s.statistics,\n    children: [title && /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: s.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: s.statList,\n      children: stats.map(_ref2 => {\n        let {\n          id,\n          label,\n          percentage\n        } = _ref2;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: s.item,\n          style: {\n            background: getRandomHexColor()\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: s.label,\n            children: [\" \", label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: s.percentage,\n            children: [\" \", percentage, \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 13\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Statistics;\n\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215).toString(16).padStart(6, 0)}`;\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    percentage: PropTypes.number.isRequired\n  }))\n};\nexport default Statistics;\n\nvar _c;\n\n$RefreshReg$(_c, \"Statistics\");","map":{"version":3,"sources":["/Users/Katsinskiy/Documents/GitHub/goit-react-hw-01-components/src/components/Statistics/Statistics.js"],"names":["PropTypes","s","Statistics","title","stats","console","log","statistics","statList","map","id","label","percentage","item","background","getRandomHexColor","Math","floor","random","toString","padStart","propTypes","string","arrayOf","shape","isRequired","number"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,CAAP,MAAc,yBAAd;;;AACA,SAASC,UAAT,OAA4C;AAAA,MAAxB;AAAEC,IAAAA,KAAK,GAAG,GAAV;AAAeC,IAAAA;AAAf,GAAwB;AAC1CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,sBACE;AAAS,IAAA,SAAS,EAAEH,CAAC,CAACM,UAAtB;AAAA,eACGJ,KAAK,iBAAI;AAAI,MAAA,SAAS,EAAEF,CAAC,CAACE,KAAjB;AAAA,gBAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,YADZ,eAEE;AAAI,MAAA,SAAS,EAAEF,CAAC,CAACO,QAAjB;AAAA,gBACGJ,KAAK,CAACK,GAAN,CAAU;AAAA,YAAC;AAAEC,UAAAA,EAAF;AAAMC,UAAAA,KAAN;AAAaC,UAAAA;AAAb,SAAD;AAAA,4BACT;AACE,UAAA,SAAS,EAAEX,CAAC,CAACY,IADf;AAGE,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAEC,iBAAiB;AAA/B,WAHT;AAAA,kCAKE;AAAM,YAAA,SAAS,EAAEd,CAAC,CAACU,KAAnB;AAAA,4BAA4BA,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eAME;AAAM,YAAA,SAAS,EAAEV,CAAC,CAACW,UAAnB;AAAA,4BAAiCA,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF;AAAA,WAEOF,EAFP;AAAA;AAAA;AAAA;AAAA,gBADS;AAAA,OAAV;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KAnBQR,U;;AAoBT,SAASa,iBAAT,GAA6B;AAC3B,SAAQ,IAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,EACRC,QADQ,CACC,EADD,EAERC,QAFQ,CAEC,CAFD,EAEI,CAFJ,CAEO,EAFlB;AAGD;;AACDlB,UAAU,CAACmB,SAAX,GAAuB;AACrBlB,EAAAA,KAAK,EAAEH,SAAS,CAACsB,MADI;AAErBlB,EAAAA,KAAK,EAAEJ,SAAS,CAACuB,OAAV,CACLvB,SAAS,CAACwB,KAAV,CAAgB;AACdd,IAAAA,EAAE,EAAEV,SAAS,CAACsB,MAAV,CAAiBG,UADP;AAEdd,IAAAA,KAAK,EAAEX,SAAS,CAACsB,MAAV,CAAiBG,UAFV;AAGdb,IAAAA,UAAU,EAAEZ,SAAS,CAAC0B,MAAV,CAAiBD;AAHf,GAAhB,CADK;AAFc,CAAvB;AAWA,eAAevB,UAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\nfunction Statistics({ title = ' ', stats }) {\n  console.log(stats);\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <ul className={s.statList}>\n        {stats.map(({ id, label, percentage }) => (\n          <li\n            className={s.item}\n            key={id}\n            style={{ background: getRandomHexColor() }}\n          >\n            <span className={s.label}> {label}</span>\n            <span className={s.percentage}> {percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\nfunction getRandomHexColor() {\n  return `#${Math.floor(Math.random() * 16777215)\n    .toString(16)\n    .padStart(6, 0)}`;\n}\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}